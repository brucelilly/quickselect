#  Description: This is the description file used by the make command; OS-specific definitions for NetBSD

# The following license covers this software, including makefiles and documentation:
# This software is covered by the zlib/libpng license.
# The zlib/libpng license is a recognized open source license by the
# Open Source Initiative: http://opensource.org/licenses/Zlib
# The zlib/libpng license is a recognized "\"free\"" software license by the
# Free Software Foundation: https://directory.fsf.org/wiki/License:Zlib
################### Copyright notice (part of the license) ###################
#$Id: ~\|^` @(#)%M% copyright 2015 - 2016 %Q%. \ makefile.netbsd $
# This software is provided 'as-is', without any express or implied warranty.
# In no event will the authors be held liable for any damages arising from the
# use of this software.
#
# Permission is granted to anyone to use this software for any purpose,
# including commercial applications, and to alter it and redistribute it freely,
# subject to the following restrictions:
#
# 1. The origin of this software must not be misrepresented; you must not claim
#    that you wrote the original software. If you use this software in a
#    product, an acknowledgment in the product documentation would be
#    appreciated but is not required.
#
# 2. Altered source versions must be plainly marked as such, and must not be
#    misrepresented as being the original software.
#
# 3. This notice may not be removed or altered from any source distribution.
############################## (end of license) ##############################
# This is %M% version %I% dated %O%.
# You may send bug reports for makefiles to %Y% with subject \"makefiles\".
#############################################################################
# maintenance note: master file  %P%

# this file defines macros specific to one OS family

# Add makefile name to .PRECIOUS pseudo-target and to MAKEFILES_READ macro
.PRECIOUS : $(MAKEFILES_DIR)/makefile.$(OS)
MAKEFILES_READ += makefile.$(OS)

# N.B.:
#  NetBSD sed is broken: pkg_add -v gsed

# NetBSD default "ksh" is the incomplete "pdksh" implementation
# use the real ksh, installed via `pkgin install ast-ksh`
# pdksh fails on ${PAGER:less} from $${PAGER:less} in makefiles
SHELL = /usr/pkg/bin/ksh93

# NetBSD "make" (really bmake) is broken (e.g. doesn't handle include); use gmake instead
#MAKE = gmake

# (All Macro Definitions are described on line preceding definition)

# Directory where executable user commands are installed
INSTALL_USER_BINDIR = $(PATH_PREFIX)/bin
#INSTALL_USER_BINDIR = $(PATH_PREFIX)/pkg/bin
#INSDIR = /usr/bin
MACROS += INSTALL_USER_BINDIR

# Directory where executable adminsitrative commands are installed
INSTALL_ADMIN_BINDIR = $(PATH_PREFIX)/gnu/sbin
MACROS += INSTALL_ADMIN_BINDIR

# Directory where executable daemons are installed
INSTALL_DAEMON_BINDIR = $(PATH_PREFIX)/sbin
#INSTALL_DAEMON_BINDIR = $(PATH_PREFIX)/inet
MACROS += INSTALL_DAEMON_BINDIR

# 32-bit vs. 64-bit run-time executable handling executable
# empty if run-time support for multi-architecture handling is not supported
ISAEXEC = 
MACROS += ISAEXEC

# indent pretty-printer
#INDENT = indent

# Public directory where help files are stored.
PUBLIC_HELPLIB = $(PATH_PREFIX)/lib/help
MACROS += PUBLIC_HELPLIB

# Public directory where man page files are stored.
#PUBLIC_MANDIR = $(PATH_PREFIX)/man
PUBLIC_MANDIR = $(PATH_PREFIX)/share/man
MACROS += PUBLIC_MANDIR

# where to install non-profiled library code
PUBLIC_LIBDIR = $(PATH_PREFIX)/lib
MACROS += PUBLIC_LIBDIR

# where to install profiled library code
PUBLIC_PROFILE_LIBDIR = /lib/lipb
PROFILE_LIBDIR = /lib/libp
MACROS += PROFILE_LIBDIR

# where to install and find configuration files
#PUBLIC_CONFIGDIR = /etc/$(PROJECT)
PUBLIC_CONFIGDIR = $(PROJECT_DIR)
#LEMD_PUBLIC_CONFIGDIR = $(LEMD_PROJECT_DIR)
#THERMOSTATD_PUBLIC_CONFIGDIR = $(THERMOSTATD_PROJECT_DIR)
MACROS += PUBLIC_CONFIGDIR

# where to install shared resources
#PUBLIC_SHARED_DIR = $(PATH_PREFIX)/pkg/share/$(PROJECT)
PUBLIC_SHARED_DIR = $(PATH_PREFIX)/share/$(PROJECT)
MACROS += PUBLIC_SHARED_DIR

# OS-specific definitions
OS_DEFS = 
MACROS += OS_DEFS

# Libraries used during loading
OS_LIBDIRS =
OS_LIBDIRS += -L /usr/X11R7/lib
OS_LIBDIRS += -L /usr/pkg/lib # pkgin / pkgsrc
FAMLIB = -lfam
#FAMLIB = -lgamin-1
#OS_LIBS = $(FAMLIB) -lcompat
OS_LIBS = -lcompat
MACROS += OS_LIBDIRS OS_LIBS

# OS-specific include directories
OS_INCLUDE = -I /usr/pkg/include
MACROS += OS_INCLUDE

# OS-specific linker flags
OS_LDFLAGS = -Wl,-R/usr/pkg/lib
MACROS += OS_LDFLAGS

# where user crontabs are stored (directory)
CRONTABS = /var/cron/tabs
MACROS += CRONTABS

# /etc/munin equivalent
MUNIN_DIR = /usr/pkg/etc/munin
MACROS += MUNIN_DIR

# /usr/libexec/munin equivalent
MUNIN_LIBEXEC = /usr/pkg/lib/munin
MACROS += MUNIN_LIBEXEC

# start/stop/restart control
MUNIN_SCRIPT = /etc/rc.d/munin-node
MACROS += MUNIN_SCRIPT

# BIND configuration directory
NAMED_CONFDIR = /etc
MACROS += NAMED_CONFDIR

# run-time directory for BIND
#NAMED_DIR = /etc/namedb
NAMED_DIR = /var/chroot/named
MACROS += NAMED_DIR

# project-specific, OS-specific file and directory ownership
NAMED_GROUP = named
NAMED_OWNER = named
MACROS += NAMED_GROUP NAMED_OWNER

# OS-specific targets to start/stop/restart
start stop restart : ALWAYS
	/etc/rc.d/$(PROJECT) $@

# terminfo location
TERMINFO = /usr/share/misc/terminfo
MACROS += TERMINFO

# XXX need mechanism to handle startup scripts for daemons: /etc/rc.d scripts, edits to /etc/defaults/rc.d

#/usr/bin/modpoll :  $(SRCDIR)/modpoll.3.1/linux/modpoll
#	$(RSYNC) $(RSYNC_OPTS) $(RSYNC_UPDATE) $? $@
#	chmod a+rx $@
