.\" Description: %M% version %I% man page %O%
.\" common man macros to V7, V10, DWB2 (unique ones omitted, differences noted)
.\" .TH n c x	V7,10	begin page n of chapter c; x is extra commentary
.\" .TH t s c n	DWB2	beg. pg. t of sect. s; c=extra comment, n=new man. name
.\"			c appears at bottom center of page, n at top center
.\" .SH text		subhead
.\" .SS text		sub-subhead
.\" .B text		make text bold
.\" .I text		make text italic
.\" .SM text		make text 1 point smaller than default
.\" .RI a b		concatenate and alternate Roman, Italic fonts <=6 args
.\" .IR .RB .BR .IB .BI	similar to .RI
.\" .PP			new paragraph
.\" .HP in		hanging paragraph with indent in
.\" .TP in		indented paragraph with hanging tag (on next line)
.\" .IP t in		indented paragraph with hanging tag t (arg 1)
.\" .RS in		increase relative indent by in
.\" .RE k		return to kth relative indent level (1-based)
.\" .DT			default tab settings
.\" .PD v		inter-paragraph spacing v (default 0.4v troff, 1v nroff)
.\" \*R			registered symbol	(Reg.)
.\" \*S			change to default type size
.lg 0	\" avoid groff's butt-ugly ligatures
.nh	\" no hyphenation
.ds ]W \" no 7th Edition designation
.\" package name in string xx
.ds xx logger
.\" copyright year(s) in string xy
.ds xy "2010 - 2015
.TH \*(xx 3 ""
.SH NAME	\" 1 line	name \- explanatory text
.B \*(xx
\- uniform logging interface
.SH SYNOPSIS
.nh	\" no hyphenation
\fB#include <\*(xx.h>\fP
.PP
.B void \*(xx(int pri, struct logger_struct *p, const char *fmt, ...);
.PP
.B void \*(xx_cleanup(struct logger_struct *p);
.PP
.SH DESCRIPTION
The
.B \*(xx
package
provides a uniform interface
to
prioritized
logging
(e.g. of error messages and diagnostic information)
in a variety of standardized formats
to a variety of possible logging locations.
Logging priority consists of a
.I severity
and a
.IR facility ,
as with
.IR syslog (3).
.I (q.v.)
Standardized formats supported include
.IP LOGGER_FORMAT_PLAIN 0.3i
simple timestamped text suitable for output to stderr or a display
.IP LOGGER_FORMAT_RFC3164 0.3i
the format specified by RFC 3164
.IP LOGGER_FORMAT_RFC5424_LOCAL 0.3i
the format specified by RFC 5424 with local time offset from UTC
.IP LOGGER_FORMAT_RFC5424_UTC 0.3i
the format specified by RFC 5424 UTC time
.PP
Symbolic constants
for the formats
are defined
in the header file
.IR \*(xx.h .
Additionally,
the formatted message
is saved in a buffer
which can be output
by any suitable means,
with or without
syslog header
or timestamp.
.PP
In addition to the formatted message buffer
mentioned above,
.I \*(xx
can output to one or more
of the following locations
.IP LOGGER_LOCATION_STREAM 0.3i
a
.I stdio
.B FILE *
stream,
which can be one of the predefined
output
streams
.I stdout
or
.IR stderr ,
or can be a stream
opened by the calling program
using e.g.
.IR fopen .
.IP LOGGER_LOCATION_SYSLOG_LOCAL 0.3i
output via system
.IR syslog .
.I Syslog
can optionally
also log to
.I stderr
and/or
the system console.
.IP LOGGER_LOCATION_SYSLOG_HOST  0.3i
output via UDP protocol to port 514
(syslog well-known port)
on a specified host.
.PP
XXX
.br
/* structures used by code */
struct logger_struct {
    FILE *stream;               /* for stream logging */
    char *sysloghost;           /* syslog receiver host */
    char *fqdn;                 /* this host fully-qualified domain name */
    char *ident;                /* RFC 3164 TAG, RFC 5424 APP-NAME */
    char *msgid;                /* RFC 5424 MSGID */
    char *software;             /* RFC 5424 origin software */
    char *swVersion;            /* RFC 5424 origin swVersion */
    char *language;             /* RFC 5424 sect. 7.3.3 */
    char buf[65536];            /* message buffer */
    struct sockaddr_in origin;  /* sender IP (e.g. for RFC 5424 origin ip=) */
    struct sockaddr_in serv_addr;       /* syslog receiver */
    int sockfd;                 /* syslog receiver */
    int options;
    int logfac;
    int logmask;
    unsigned long sysUpTime;    /* hundredths of a second RFC 5424 sect. 7.3.2 */
    unsigned int location;      /* LOGGER_LOCATION_* defined above */
    unsigned int format;        /* LOGGER_FORMAT_* defined above */
    unsigned int hdrlen;        /* length of syslog-specific content at start of buf */
    unsigned int msgoffset;     /* start of non-timestamped message relative to buf */
    unsigned int sequenceId;    /* RFC 5424 meta sequenceId */
    unsigned int enterpriseId;  /* RFC 5424 origin enterpriseId */
    unsigned int syncAccuracy;  /* RFC 5424 timeQuality */
    unsigned int tzKnown:1;     /* RFC 5424 timeQuality */
    unsigned int isSynced:1;    /* RFC 5424 timeQuality */
    size_t msglen;              /* length of message in buf */
    pid_t pid;                  /* RFC 5424 PROCID */
};
.SH RETURN VALUES
None.
.SH ERRORS
No errors are defined.
.SH EXAMPLES
.PP
struct logger_struct ls;
.br
.br
ls.stream = stderr;
.br
ls.logmask = LOG_UPTO(LOG_INFO);
.br
ls.options = LOG_PID /* | LOG_PERROR | LOG_CONS */ ;
.br
ls.ident = prog;
.br
ls.sysloghost = loghost;
.br
ls.location = LOGGER_LOCATION_STREAM | LOGGER_LOCATION_SYSLOG_HOST ;
.br
ls.sockfd = -1;
.br
ls.logfac = LOG_DAEMON;
.br
ls.format = LOGGER_FORMAT_RFC5424_UTC;
.br
ls.msgid = "test";
.br
ls.sequenceId = 1;
.br
XXX
.br
XXX
.PP
.SH APPLICATION USAGE
XXX
.SH RATIONALE
XXX
.SH BUGS and CAVEATS
XXX
.PP
In mutithreaded applications,
each thread should use a separate
.I struct logger_struct
to avoid mixing message
content in the structure's message buffer.
.SH FUTURE DIRECTIONS
XXX
.SH SEE ALSO
XXX
.IR syslog ,
.IR fopen ,
.IR printf ,
.IR snn ,
.IR civil_time ,
.IR utc_mktime .
.SH CHANGE HISTORY
XXX
.SH AUTHOR
%Q% <%Y%>
.SH LICENSE
.PP
The following license covers this software, including makefiles and documentation:
.PP
This software is covered by the zlib/libpng license.
.br
The zlib/libpng license is a recognized open source license by the
Open Source Initiative: http://opensource.org/licenses/Zlib
.br
The zlib/libpng license is a recognized \(dqfree\(dq software license by the
Free Software Foundation: https://directory.fsf.org/wiki/License:Zlib
.br
.lt +0.6i
.po 0.7i
.tl '*************** 'Copyright notice (part of the license)'***************'
.po
.lt
.br
@(#)%M% %I% %O% copyright \*(xy %Q%
.br
This software is provided 'as-is', without any express or implied warranty.
In no event will the authors be held liable for any damages arising from the
use of this software.
.PP
Permission is granted to anyone to use this software for any purpose,
including commercial applications, and to alter it and redistribute it freely,
subject to the following restrictions:
.IP 1. 0.3i
The origin of this software must not be misrepresented; you must not claim
that you wrote the original software. If you use this software in a
product, an acknowledgment in the product documentation would be
appreciated but is not required.
.IP 2. 0.3i
Altered source versions must be plainly marked as such, and must not be
misrepresented as being the original software.
.IP 3. 0.3i
This notice may not be removed or altered from any source distribution.
.RS 0
.lt +0.6i
.po 0.7i
.tl '*************************'(end of license)'*************************'
.po
.lt
.PP
You may send bug reports to %Y% with subject "\*(xx".
.\" maintenance note: master file  %P%
