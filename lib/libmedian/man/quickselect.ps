%!PS-Adobe-3.0
%%Creator: groff version 1.22.4
%%CreationDate: Tue Apr 23 07:17:33 2019
%%DocumentNeededResources: font Times-Roman
%%+ font Times-Bold
%%+ font Times-Italic
%%DocumentSuppliedResources: procset grops 1.22 4
%%Pages: 5
%%PageOrder: Ascend
%%DocumentMedia: Default 612 792 0 () ()
%%Orientation: Portrait
%%EndComments
%%BeginDefaults
%%PageMedia: Default
%%EndDefaults
%%BeginProlog
%%BeginResource: procset grops 1.22 4
%!PS-Adobe-3.0 Resource-ProcSet
/setpacking where{
pop
currentpacking
true setpacking
}if
/grops 120 dict dup begin
/SC 32 def
/A/show load def
/B{0 SC 3 -1 roll widthshow}bind def
/C{0 exch ashow}bind def
/D{0 exch 0 SC 5 2 roll awidthshow}bind def
/E{0 rmoveto show}bind def
/F{0 rmoveto 0 SC 3 -1 roll widthshow}bind def
/G{0 rmoveto 0 exch ashow}bind def
/H{0 rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/I{0 exch rmoveto show}bind def
/J{0 exch rmoveto 0 SC 3 -1 roll widthshow}bind def
/K{0 exch rmoveto 0 exch ashow}bind def
/L{0 exch rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/M{rmoveto show}bind def
/N{rmoveto 0 SC 3 -1 roll widthshow}bind def
/O{rmoveto 0 exch ashow}bind def
/P{rmoveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/Q{moveto show}bind def
/R{moveto 0 SC 3 -1 roll widthshow}bind def
/S{moveto 0 exch ashow}bind def
/T{moveto 0 exch 0 SC 5 2 roll awidthshow}bind def
/SF{
findfont exch
[exch dup 0 exch 0 exch neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/MF{
findfont
[5 2 roll
0 3 1 roll
neg 0 0]makefont
dup setfont
[exch/setfont cvx]cvx bind def
}bind def
/level0 0 def
/RES 0 def
/PL 0 def
/LS 0 def
/MANUAL{
statusdict begin/manualfeed true store end
}bind def
/PLG{
gsave newpath clippath pathbbox grestore
exch pop add exch pop
}bind def
/BP{
/level0 save def
1 setlinecap
1 setlinejoin
DEFS/BPhook known{DEFS begin BPhook end}if
72 RES div dup scale
LS{
90 rotate
}{
0 PL translate
}ifelse
1 -1 scale
}bind def
/EP{
level0 restore
showpage
}def
/DA{
newpath arcn stroke
}bind def
/SN{
transform
.25 sub exch .25 sub exch
round .25 add exch round .25 add exch
itransform
}bind def
/DL{
SN
moveto
SN
lineto stroke
}bind def
/DC{
newpath 0 360 arc closepath
}bind def
/TM matrix def
/DE{
TM currentmatrix pop
translate scale newpath 0 0 .5 0 360 arc closepath
TM setmatrix
}bind def
/RC/rcurveto load def
/RL/rlineto load def
/ST/stroke load def
/MT/moveto load def
/CL/closepath load def
/Fr{
setrgbcolor fill
}bind def
/setcmykcolor where{
pop
/Fk{
setcmykcolor fill
}bind def
}if
/Fg{
setgray fill
}bind def
/FL/fill load def
/LW/setlinewidth load def
/Cr/setrgbcolor load def
/setcmykcolor where{
pop
/Ck/setcmykcolor load def
}if
/Cg/setgray load def
/RE{
findfont
dup maxlength 1 index/FontName known not{1 add}if dict begin
{
1 index/FID ne
2 index/UniqueID ne
and
{def}{pop pop}ifelse
}forall
/Encoding exch def
dup/FontName exch def
currentdict end definefont pop
}bind def
/DEFS 0 def
/EBEGIN{
moveto
DEFS begin
}bind def
/EEND/end load def
/CNT 0 def
/level1 0 def
/PBEGIN{
/level1 save def
translate
div 3 1 roll div exch scale
neg exch neg exch translate
0 setgray
0 setlinecap
1 setlinewidth
0 setlinejoin
10 setmiterlimit
[]0 setdash
/setstrokeadjust where{
pop
false setstrokeadjust
}if
/setoverprint where{
pop
false setoverprint
}if
newpath
/CNT countdictstack def
userdict begin
/showpage{}def
/setpagedevice{}def
mark
}bind def
/PEND{
cleartomark
countdictstack CNT sub{end}repeat
level1 restore
}bind def
end def
/setpacking where{
pop
setpacking
}if
%%EndResource
%%EndProlog
%%BeginSetup
%%BeginFeature: *PageSize Default
<< /PageSize [ 612 792 ] /ImagingBBox null >> setpagedevice
%%EndFeature
%%IncludeResource: font Times-Roman
%%IncludeResource: font Times-Bold
%%IncludeResource: font Times-Italic
grops begin/DEFS 1 dict def DEFS begin/u{.001 mul}bind def end/RES 72
def/PL 792 def/LS false def/ENC0[/asciicircum/asciitilde/Scaron/Zcaron
/scaron/zcaron/Ydieresis/trademark/quotesingle/Euro/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef/.notdef
/.notdef/.notdef/space/exclam/quotedbl/numbersign/dollar/percent
/ampersand/quoteright/parenleft/parenright/asterisk/plus/comma/hyphen
/period/slash/zero/one/two/three/four/five/six/seven/eight/nine/colon
/semicolon/less/equal/greater/question/at/A/B/C/D/E/F/G/H/I/J/K/L/M/N/O
/P/Q/R/S/T/U/V/W/X/Y/Z/bracketleft/backslash/bracketright/circumflex
/underscore/quoteleft/a/b/c/d/e/f/g/h/i/j/k/l/m/n/o/p/q/r/s/t/u/v/w/x/y
/z/braceleft/bar/braceright/tilde/.notdef/quotesinglbase/guillemotleft
/guillemotright/bullet/florin/fraction/perthousand/dagger/daggerdbl
/endash/emdash/ff/fi/fl/ffi/ffl/dotlessi/dotlessj/grave/hungarumlaut
/dotaccent/breve/caron/ring/ogonek/quotedblleft/quotedblright/oe/lslash
/quotedblbase/OE/Lslash/.notdef/exclamdown/cent/sterling/currency/yen
/brokenbar/section/dieresis/copyright/ordfeminine/guilsinglleft
/logicalnot/minus/registered/macron/degree/plusminus/twosuperior
/threesuperior/acute/mu/paragraph/periodcentered/cedilla/onesuperior
/ordmasculine/guilsinglright/onequarter/onehalf/threequarters
/questiondown/Agrave/Aacute/Acircumflex/Atilde/Adieresis/Aring/AE
/Ccedilla/Egrave/Eacute/Ecircumflex/Edieresis/Igrave/Iacute/Icircumflex
/Idieresis/Eth/Ntilde/Ograve/Oacute/Ocircumflex/Otilde/Odieresis
/multiply/Oslash/Ugrave/Uacute/Ucircumflex/Udieresis/Yacute/Thorn
/germandbls/agrave/aacute/acircumflex/atilde/adieresis/aring/ae/ccedilla
/egrave/eacute/ecircumflex/edieresis/igrave/iacute/icircumflex/idieresis
/eth/ntilde/ograve/oacute/ocircumflex/otilde/odieresis/divide/oslash
/ugrave/uacute/ucircumflex/udieresis/yacute/thorn/ydieresis]def
/Times-Italic@0 ENC0/Times-Italic RE/Times-Bold@0 ENC0/Times-Bold RE
/Times-Roman@0 ENC0/Times-Roman RE
%%EndSetup
%%Page: 1 1
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.355(quickselect\(3\) Library)72 48 R
(Functions Manual)2.5 E(quickselect\(3\))124.855 E/F1 10.95/Times-Bold@0
SF -.219(NA)72 84 S(ME).219 E/F2 10/Times-Bold@0 SF(quickselect)108 96 Q
F0 2.5<ad6d>2.5 G(ultiple selection of order statistics and sorting)-2.5
E F1(SYNOPSIS)72 112.8 Q F2(#include <quickselect.h>)108 124.8 Q
(unsigned int quickselect_options\(v)108 141.6 Q(oid\);)-.1 E .505
(int quickselect\(v)108 158.4 R .504
(oid *base, size_t nmemb, size_t size, int \(*compar\)\(const v)-.1 F
.504(oid *, const v)-.1 F .504(oid *\), size_t)-.1 F
(*pk, size_t nk, unsigned int options\);)108 170.4 Q(err)108 187.2 Q
.717(no_t quickselect_s\(v)-.15 F .717
(oid *base, rsize_t nmemb, rsize_t size, int \(*compar\)\(const v)-.1 F
.718(oid *, const v)-.1 F(oid)-.1 E(*, v)108 199.2 Q(oid *\), v)-.1 E
(oid *context, size_t *pk, size_t nk, unsigned int options\);)-.1 E -.1
(vo)108 216 S .959(id QSOR).1 F(T_FUNCTION_N)-.4 E(AME\(v)-.2 E .959
(oid *base, size_t nmemb, size_t size, int \(*compar\)\(const v)-.1 F
.959(oid ,)-.1 F(const v)108 228 Q(oid *\)\);)-.1 E(err)108 244.8 Q .258
(no_t QSOR)-.15 F(T_S_FUNCTION_N)-.4 E(AME\(v)-.2 E .259
(oid *base, rsize_t nmemb, rsize_t size, int \(*compar\)\(const)-.1 F
-.1(vo)108 256.8 S(id *, const v).1 E(oid *, v)-.1 E(oid *\), v)-.1 E
(oid *context\);)-.1 E 1.672(int dedicated_sort \(char *base, size_t f)
108 273.6 R 1.672(irst, size_t bey)-.25 F 1.672
(ond, /*const*/ size_t size, int\(*compar\)\(const)-.25 F -.1(vo)108
285.6 S 1.695(id *,const v).1 F 1.695(oid *\), v)-.1 F 1.696(oid \(*swa\
pf\)\(char *, char *, size_t\), size_t alignsize, size_t size_ratio, si\
ze_t)-.1 F(cache_sz, size_t pbey)108 297.6 Q
(ond, unsigned int options\);)-.25 E -.1(vo)108 314.4 S .411(id f).1 F
.411(ind_minmax \(char *base, size_t f)-.25 F .411(irst, size_t bey)-.25
F .411(ond, size_t size, int\(*compar\)\(const v)-.25 F .41(oid *,const)
-.1 F -.1(vo)108 326.4 S
(id *\), unsigned int options, char **pmn, char **pmx\);).1 E 3.498
(char *fmed3\(r)108 343.2 R 3.499(egister /*const*/char *pa, r)-.18 F
3.499(egister /*const*/char *pb, r)-.18 F 3.499
(egister /*const*/char *pc,)-.18 F(int\(*compar\)\(const v)108 355.2 Q
(oid *,const v)-.1 E(oid *\), unsigned int options\);)-.1 E -.1(vo)108
372 S 1.886(id klimits\(size_t f).1 F 1.886(irst, size_t bey)-.25 F
1.885(ond, const size_t *pk, size_t f)-.25 F 1.885(irstk, size_t bey)
-.25 F 1.885(ondk, size_t *pfk,)-.25 F(size_t *pbk\);)108 384 Q -.1(vo)
108 400.8 S .367(id partition \(char *base, size_t f).1 F .367
(irst, size_t bey)-.25 F .368(ond, char *pc, char *pd, char *pi)-.25 F
-.1(vo)-.1 G .368(t, char *pe, char).1 F(*pf)108 412.8 Q 3.533(,s)-.15 G
1.032(ize_t size, int\(*compar\)\(const v)-3.533 F 1.032(oid *,const v)
-.1 F 1.032(oid *\), v)-.1 F 1.032
(oid \(*swapf\)\(char *, char *, size_t\), size_t)-.1 F(alignsize, size\
_t size_ratio, size_t cachesz, unsigned int options, size_t *peq, size_\
t *pgt\);)108 424.8 Q 3.919(unsigned int sample_index \(const struct sa\
mpling_table_struct *psts, unsigned int idx, size_t)108 441.6 R
(nmemb\);)108 453.6 Q
(size_t samples \(size_t nmemb, int method, unsigned int distrib)108
470.4 Q(ution, unsigned int options\);)-.2 E .231
(unsigned int sampling_table \(size_t f)108 487.2 R .231
(irst, size_t bey)-.25 F .231(ond, const size_t *pk, size_t f)-.25 F .23
(irstk, size_t bey)-.25 F(ondk,)-.25 E(char **ppeq, const size_t **ppk,\
 size_t nmemb, size_t size_ratio, int method, unsigned int options\);)
108 499.2 Q -.1(vo)108 516 S 1.271(id select_max \(char *base, size_t f)
.1 F 1.272(irst, size_t bey)-.25 F 1.272
(ond, size_t size, int\(*compar\)\(const v)-.25 F 1.272(oid *,const)-.1
F -.1(vo)108 528 S 1.111(id *\),v).1 F 1.111(oid \(*swapf\)\(char *, ch\
ar *, size_t\), size_t alignsize, size_t size_ratio, unsigned int optio\
ns,)-.1 F(char **ppeq, char **ppgt\);)108 540 Q -.1(vo)108 556.8 S 1.41
(id select_min \(char *base, size_t f).1 F 1.41(irst, size_t bey)-.25 F
1.41(ond, size_t size, int\(*compar\)\(const v)-.25 F 1.41(oid *,const)
-.1 F -.1(vo)108 568.8 S 1.111(id *\),v).1 F 1.111(oid \(*swapf\)\(char\
 *, char *, size_t\), size_t alignsize, size_t size_ratio, unsigned int\
 options,)-.1 F(char **ppeq, char **ppgt\);)108 580.8 Q -.1(vo)108 597.6
S 2.801(id select_minmax \(char *base, size_t f).1 F 2.801
(irst, size_t bey)-.25 F 2.801
(ond, size_t size, int\(*compar\)\(const v)-.25 F(oid)-.1 E 1.411
(*,const v)108 609.6 R 1.411(oid *\),v)-.1 F 1.411(oid \(*swapf\)\(char\
 *, char *, size_t\), size_t alignsize, size_t size_ratio, unsigned int)
-.1 F(options\);)108 621.6 Q .493(char *select_pi)108 638.4 R -.1(vo)-.1
G 2.993(t\().1 G .493(char *base, size_t f)-2.993 F .493
(irst, size_t bey)-.25 F .494(ond, size_t size, int\(*compar\)\(const v)
-.25 F .494(oid *,const)-.1 F -.1(vo)108 650.4 S 3.697(id *\), v).1 F
3.697(oid \(*swapf\)\(char *, char *, size_t\), size_t alignsize, size_\
t size_ratio, unsigned int)-.1 F(distrib)108 662.4 Q 1.032
(ution, const size_t *pk, size_t f)-.2 F 1.032(irstk, size_t bey)-.25 F
1.033(ondk, size_t cachesz, size_t pbey)-.25 F 1.033(ond, unsigned)-.25
F(int options, char **ppc, char **ppd, char **ppe, char **ppf)108 674.4
Q 2.5(,i)-.15 G(nt *pmethod, size_t *psamples\);)-2.5 E 1.444
(unsigned int should_r)108 691.2 R(epi)-.18 E -.1(vo)-.1 G 3.944(t\().1
G 1.444
(const size_t nmemb, const size_t n, const size_t samples, int method,)
-3.944 F(unsigned int options, const size_t *pk, int *pn2\);)108 703.2 Q
(size_t size_t_sqrt \(size_t n\);)108 720 Q F0(1)535 768 Q 0 Cg EP
%%Page: 2 2
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.355(quickselect\(3\) Library)72 48 R
(Functions Manual)2.5 E(quickselect\(3\))124.855 E/F1 10/Times-Bold@0 SF
(#include <compar)108 84 Q(e.h>)-.18 E(int size_tcmp\(const v)108 100.8
Q(oid *, const v)-.1 E(oid *\);)-.1 E/F2 10.95/Times-Bold@0 SF
(DESCRIPTION)72 117.6 Q F0(The)108 129.6 Q F1(quickselect)2.871 E F0
.371(function implements multiple selection of order statistics.)2.871 F
(Gi)5.371 E -.15(ve)-.25 G 2.871(na).15 G 2.872(na)-2.871 G(rray)-2.872
E F1(pk)2.872 E F0(of)2.872 E F1(nk)2.872 E/F3 10/Times-Italic@0 SF
(size_t)3.212 E F0 1.688
(elements representing 0\255based order statistic ranks,)108 141.6 R F1
(quickselect)4.188 E F0 1.687(partially orders the array)4.187 F F1
(base)4.187 E F0(\(ha)4.187 E(ving)-.2 E F1(nmemb)108 153.6 Q F0 1.3
(elements of size)3.8 F F1(size)3.8 E F0 3.8(\)s)C 1.3
(uch that the specif)-3.8 F 1.3
(ied order statistics are in\255place in the array)-.2 F 6.3(.I)-.65 G
(f)-6.3 E F1(pk)3.8 E F0(is)3.8 E F3(NULL)108.7 165.6 Q F0(or)3.03 E F1
(nk)2.5 E F0(is 0UL, a full sort of the array is performed.)2.5 E
(Function)108 182.4 Q F1(compar)4.157 E F0 1.657(is pro)4.157 F 1.657
(vided by the caller)-.15 F 4.157(,a)-.4 G 1.657(nd should return a v)
-4.157 F 1.656(alue less than zero, equal to zero, or)-.25 F .7
(greater than zero when the array element pointed to by the f)108 194.4
R .701(irst ar)-.2 F .701(gument is less than, equal to, or greater)-.18
F 1.662(than the array element pointed to by the second ar)108 206.4 R
4.162(gument. An)-.18 F -.15(ex)4.162 G 1.661
(ample of such a function \(for NUL-).15 F
(terminated character arrays\) is)108 218.4 Q F3(str)2.84 E(cmp)-.37 E
F0(.).19 E(The)108 235.2 Q F1(options)2.5 E F0(ar)2.5 E(gument af)-.18 E
(fects operation by bitwise or'ing an)-.25 E 2.5(yo)-.15 G 2.5(ft)-2.5 G
(he follo)-2.5 E(wing components:)-.25 E -.1(QU)108 252 S(ICKSELECT_ST)
.1 E(ABLE)-.93 E 1.396(causes sorting or selection to preserv)144 264 R
3.896(ep)-.15 G 1.396(artial order present in the input.)-3.896 F 1.396
(There is a substantial)6.396 F(performance penalty; the def)144 276 Q
(ault operation does not guarantee preserv)-.1 E(ation of partial order)
-.25 E(.)-.55 E -.1(QU)108 292.8 S(ICKSELECT_OPTIMIZE_COMP).1 E(ARISONS)
-.92 E .754(uses minimum-comparison methods and is suitable if the comp\
arison function)144 304.8 R F1(compar)3.254 E F0 .754(is kno)3.254 F(wn)
-.25 E 2.62(to be relati)144 316.8 R -.15(ve)-.25 G 2.621(ly e).15 F
(xpensi)-.15 E -.15(ve)-.25 G 7.621(.T).15 G 2.621(he def)-7.621 F 2.621
(ault operation attempts to minimize run\255time for simple)-.1 F
(comparisons.)144 328.8 Q -.1(QU)108 345.6 S(ICKSELECT_INDIRECT).1 E
.933(allocates an array of pointers and initializes it to point to elem\
ents in the)144 357.6 R F1(base)3.433 E F0(array)3.433 E 5.933(.S)-.65 G
.932(orting or)-5.933 F 1.606(selection then proceeds by dereferencing \
the pointers for comparisons \(using the user)144 369.6 R(-supplied)-.2
E F1(compar)144 381.6 Q F0 1.743
(function, and caching dereferenced pointers where practical\), f)4.243
F 1.743(inally rearranging)-.2 F F1(base)4.243 E F0 .791
(array elements and freeing the allocated pointers.)144 393.6 R .792
(Direct sorting or selection is used if memeory)5.791 F .002
(cannot be allocated for the pointers.)144 405.6 R .001
(Caching of dereferenced pointers pro)5.002 F .001(vides a tin)-.15 F
2.501(yp)-.15 G(erformance)-2.501 E -.05(ga)144 417.6 S 3.918(in compar\
ed to caller indirection \(the comparison function in that case w).05 F
3.918(ould do the)-.1 F 1.001(dereferencing, and caching \(e.g. the pi)
144 429.6 R -.2(vo)-.25 G 3.501(te).2 G 1.001
(lement used for partitioning\) w)-3.501 F 1(ould not be possible\).)-.1
F(Rearranging)144 441.6 Q F1(base)4.601 E F0 2.102
(array elements after sorting the pointers sa)4.601 F -.15(ve)-.2 G
4.602(sc).15 G 2.102(onsiderable data mo)-4.602 F -.15(ve)-.15 G(ment)
.15 E(\(mo)144 453.6 Q .016
(ving only pointers during sorting or selection, and mo)-.15 F .015
(ving each)-.15 F F1(base)2.515 E F0 .015(array element one time to)
2.515 F .971(its correct position is considerably less o)144 465.6 R
-.15(ve)-.15 G .972(rall data mo).15 F -.15(ve)-.15 G .972(ment than mo)
.15 F(ving)-.15 E F1(base)3.472 E F0 .972(array elements)3.472 F 1.279
(during sorting or selection if)144 477.6 R F1(size)3.779 E F0 1.279
(is appreciably lar)3.779 F 1.279(ger than a pointer\).)-.18 F(Ho)6.278
E(we)-.25 E -.15(ve)-.25 G 2.078 -.4(r, t).15 H 1.278(he f).4 F 1.278
(inal data)-.2 F(mo)144 489.6 Q -.15(ve)-.15 G(ment has poor locality o\
f access for random inputs, which may cause poor performance when).15 E
.115(the data array \(the product of element)144 501.6 R F1(size)2.615 E
F0 .115(and the number of elements)2.615 F F1(nmemb)2.614 E F0 2.614
(\)i)C 2.614(sl)-2.614 G(ar)-2.614 E .114(ge relati)-.18 F .414 -.15
(ve t)-.25 H(o).15 E .051(cache size.)144 513.6 R .051(The primary adv)
5.051 F .052(antage of internal indirection is caller con)-.25 F -.15
(ve)-.4 G .052(nience: the caller pro).15 F(vides)-.15 E 4.038(an)144
525.6 S(ormal)-4.038 E F1(compar)4.038 E F0 1.537(function rather than \
one which dereferences pointers; allocating, initializing,)4.038 F 1.548
(and freeing the pointers is handled transparently to the caller)144
537.6 R 4.049(,f)-.4 G 1.549(allback to direct sorting is also)-4.149 F
(automatic, and the f)144 549.6 Q(inal)-.2 E F3(O\(N\))2.4 E F1(base)
2.56 E F0(array reordering is ef)2.5 E -.2(fi)-.25 G
(cient \(though not cache-friendly\).).2 E 1.927(Options may ha)108
566.4 R 2.227 -.15(ve b)-.2 H 1.926
(een limited at library compile time to more restricti).15 F 2.226 -.15
(ve v)-.25 H 1.926(alues than those found in)-.1 F F3(quic)108.25 578.4
Q(kselect.h)-.2 E F0 5.48(.F).28 G(unction)-5.48 E F1
(quickselect_options)2.98 E F0 .481
(may be called to determine the options a)2.981 F -.25(va)-.2 G .481
(ilable at run-time:).25 F 1.477(bits not present in the returned v)108
590.4 R 1.477(alue pro)-.25 F 1.477(vided from)-.15 F F1
(quickselect_options)3.977 E F0 1.476(should not be included in the)
3.977 F F3(options)108.23 602.4 Q F0(ar)2.77 E(gument to)-.18 E F1
(quickselect)2.5 E F0 2.5(;t)C(he)-2.5 E 2.5(yw)-.15 G(ill cause)-2.5 E
F1(quickselect)2.5 E F0(to f)2.5 E(ail and set)-.1 E F3(errno)2.69 E F0
(to)2.68 E F1(EINV)2.5 E(AL)-1.35 E F0(.)A .019(The function)108 619.2 R
F1(size_tcmp)2.519 E F0 .019(is def)2.519 F .02(ined for use in compari\
ng order statistic ranks for the purpose of sorting those)-.2 F 3.162
(ranks. It)108 631.2 R .662(is e)3.162 F .662
(xternally visible, and may be used to compare)-.15 F F3(size_t)3.502 E
F0 -.25(va)3.842 G 3.162(riables. It).25 F .662(is safe e)3.162 F -.15
(ve)-.25 G 3.162(ni).15 G 3.162(fo)-3.162 G .662(ne or both)-3.162 F
-.25(va)108 643.2 S(lues is).25 E F1(SIZE_MAX)2.5 E F0(.)A(Se)108 660 Q
-.15(ve)-.25 G(ral support functions are also e).15 E(xternall visible.)
-.15 E F2(RETURN V)72 676.8 Q(ALUES)-1.478 E F0 .692(none for QSOR)108
688.8 R(T_FUNCTION_N)-.6 E(AME.)-.35 E F1(quickselect)5.692 E F0 .692
(returns zero on normal e)3.192 F -.15(xe)-.15 G .693
(cution and sets the global).15 F -.25(va)108 700.8 S(riable).25 E F3
(errno)10.417 E F0(to)10.407 E F1(EINV)10.227 E(AL)-1.35 E F0 7.727
(and returns that v)10.227 F 7.726(alue if there is an ar)-.25 F 7.726
(gument error)-.18 F 12.726(.I)-.55 G(f)-12.726 E F1(__STDC_W)108 712.8
Q(ANT_LIB_EXT1__)-1.2 E F0 5.156(is def)7.656 F 5.157
(ined with non-zero v)-.2 F 5.157(alue when)-.25 F F3(quic)7.907 E
(kselect.h)-.2 E F0 5.157(is included,)7.937 F .165
(quickselect_s and QSOR)108 724.8 R(T_S_FUNCTION_N)-.6 E .165
(AME are pro)-.35 F .164(vided, which return zero on normal e)-.15 F
-.15(xe)-.15 G .164(ction and).15 F(2)535 768 Q 0 Cg EP
%%Page: 3 3
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.355(quickselect\(3\) Library)72 48 R
(Functions Manual)2.5 E(quickselect\(3\))124.855 E .904
(non-zero if there is an ar)108 84 R .904(gument error)-.18 F 5.904(.A)
-.55 G -.18(rg)-5.904 G(uments).18 E/F1 10/Times-Bold@0 SF(nmemb)3.404 E
F0(and)3.404 E F1(size)3.404 E F0 .904(are compared to)3.404 F F1
(RSIZE_MAX)3.404 E F0 3.404(,a)C(nd)-3.404 E F1(compar)108 96 Q F0 .891
(is compared to)3.391 F F1(NULL)3.391 E F0 5.891(.I)C 3.391(na)-5.891 G
.891(ddition, the comparison function)-3.391 F F1(compar)3.391 E F0 .89
(is e)3.39 F .89(xpected to tak)-.15 F 3.39(eat)-.1 G(hird)-3.39 E(ar)
108 108 Q(gument, which is pro)-.18 E(vided by the)-.15 E F1(contect)2.5
E F0(ar)2.5 E(gument.)-.18 E F1(size_tcmp)108 124.8 Q F0 .823
(returns -1, 0, or 1 depending on whether the)3.323 F/F2 10
/Times-Italic@0 SF(size_t)3.664 E F0 -.25(va)4.004 G .824
(lue pointed to by the f).25 F .824(irst pointer is less)-.2 F
(than, equal to, or greater than \(respecti)108 136.8 Q -.15(ve)-.25 G
(ly\) the v).15 E(alue pointed to by the second pointer)-.25 E(.)-.55 E
/F3 10.95/Times-Bold@0 SF(ERR)72 153.6 Q(ORS)-.329 E F0(If)108 165.6 Q
F1(base)2.958 E F0(is)2.957 E F2(NULL)3.657 E F0(,).53 E F1(nmemb)2.957
E F0 .457(is 0UL,)2.957 F F1(size)2.957 E F0 .457(is 0UL,)2.957 F F1
(compar)2.957 E F0(is)2.957 E F2(NULL)3.657 E F0 2.957(,o).53 G(r)-2.957
E F1(options)2.957 E F0 .457(requests una)2.957 F -.25(va)-.2 G .457
(ilable options,).25 F(the global v)108 177.6 Q(ariable)-.25 E F2(errno)
2.69 E F0(is set to)2.68 E F1(EINV)2.5 E(AL)-1.35 E F0(.)A F3(EXAMPLES)
72 194.4 Q F0(#include "quickselect.h")108 206.4 Q(#include <errno.h>)
108 218.4 Q(int r;)108 230.4 Q(size_t karray[2];)108 242.4 Q
(unsigned int options;)108 254.4 Q(karray[0] = \(nmemb-1UL\)/2UL;)108
266.4 Q(karray[1] = nmemb/2UL;)108 278.4 Q
(options = quickselect_options\(\);)108 290.4 Q
(r=quickselect\(base, nmemb, size, compar)108 314.4 Q 2.5(,N)-.4 G
(ULL, karray)-2.5 E 2.5(,2)-.65 G(UL, 0U\);)-2.5 E .455
(places the median \()108 338.4 R F1(nmemb)A F0 .455
(odd\) or medians \()5 F F1(nmemb)A F0 -2.15 -.25(ev e)5 H .455
(n\) in the middle element\(s\) of the array pointed).25 F(to by)108
350.4 Q F1(base.)2.5 E F0(Refer to the B)5 E(UGS and CA)-.1 E(VEA)-1.35
E(TS section re)-1.11 E -.05(ga)-.15 G
(rding duplicated order statistic ranks.).05 E(\(v)108 374.4 Q
(oid\)quickselect\(base, nmemb, size, compar)-.2 E 2.5(,N)-.4 G
(ULL, NULL, 0UL, 0U\);)-2.5 E(sorts the array)108 398.4 Q 2.5(,a)-.65 G
(nd is equi)-2.5 E -.25(va)-.25 G(lent to).25 E(QSOR)108 410.4 Q
(T_FUNCTION_N)-.6 E(AME\(base, nmemb, size, compar\);)-.35 E(errno = 0;)
108 434.4 Q(r=quickselect\(base, nmemb, size, compar)108 446.4 Q 2.5(,N)
-.4 G(ULL, NULL, 0UL, Q)-2.5 E(UICKSELECT_ST)-.1 E(ABLE\);)-.93 E .235
(requests a stable sort; if that option is una)108 470.4 R -.25(va)-.2 G
.235(ilable, the array).25 F F1(base)2.734 E F0 .234
(will be unaltered, and)2.734 F F2(r)2.784 E F0(and)3.464 E F2(errno)
2.924 E F0 .234(will be)2.914 F(set to)108 482.4 Q F1(EINV)2.5 E(AL)
-1.35 E F0(.)A(r=quickselect\(base, nmemb, size, compar)108 506.4 Q 2.5
(,N)-.4 G(ULL, NULL, 0UL, options & Q)-2.5 E(UICKSELECT_ST)-.1 E
(ABLE\);)-.93 E(requests a stable sort if that option is a)108 530.4 Q
-.25(va)-.2 G(ilable, a).25 E -.2(vo)-.2 G
(iding error return if the option is una).2 E -.25(va)-.2 G(ilable.).25
E F3(APPLICA)72 547.2 Q(TION USA)-1.04 E(GE)-.602 E F0 .002
(If the macro)108 559.2 R F1(QSOR)2.502 E(T_FUNCTION_N)-.4 E(AME)-.2 E
F0 .002(is def)2.502 F .002(ined before)-.2 F F2(quic)2.753 E(kselect.h)
-.2 E F0 .003(is included when compiling the)2.783 F F2(quic)108.25
571.2 Q(kselect.c)-.2 E F0 .684
(source, a sorting function with the same semantics as)3.494 F F1(qsort)
3.183 E F0 .683(is generated, using the specif)3.183 F(ied)-.2 E 2.737
(name. A)108 583.2 R .237(library implementation of)2.737 F F1(qsort)
2.737 E F0 .238(may be generated by def)2.737 F(ining)-.2 E F1(QSOR)
2.738 E(T_FUNCTION_N)-.4 E(AME)-.2 E F0(as)2.738 E F1(qsort)108 595.2 Q
F0(.)A F3(RA)72 612 Q(TION)-1.04 E(ALE)-.219 E F0 .178(While man)108 624
R 2.678(yl)-.15 G .177(ibraries include a standard)-2.678 F F1(qsort)
2.677 E F0 .177(function, those)2.677 F F1(qsort)2.677 E F0 .177
(implementations may tend to quadratic)2.677 F 2.756(performance on adv)
108 636 R 2.756(erse inputs.)-.15 F(Man)7.756 E 5.257(yi)-.15 G 2.757
(mplementations e)-5.257 F 2.757
(xhibit poor performance for some types of)-.15 F 2.448
(structured input sequences, such as re)108 648 R -.15(ve)-.25 G 2.447
(rse-sorted or rotated sequences.).15 F(Most)7.447 E F1(qsort)4.947 E F0
(implementations)4.947 E(pro)108 660 Q 1.079
(vide no guarantee of stablilty \(in the sense of preserv)-.15 F 1.08
(ation of partial order\), and there is no means to)-.25 F .699
(adjust the algorithm to compensate for e)108 672 R(xpensi)-.15 E .999
-.15(ve c)-.25 H .699(omparisons or sw).15 F 3.198(aps. Fe)-.1 F 3.198
(wl)-.25 G .698(ibraries pro)-3.198 F .698(vide a function)-.15 F 1.313
(for selection of order statistics.)108 684 R 1.313
(Those libraries that do pro)6.313 F 1.314
(vide a selection function usually only permit)-.15 F
(selection of a single order statistic per function call.)108 696 Q(3)
535 768 Q 0 Cg EP
%%Page: 4 4
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.355(quickselect\(3\) Library)72 48 R
(Functions Manual)2.5 E(quickselect\(3\))124.855 E/F1 10.95/Times-Bold@0
SF -.11(BU)72 84 S(GS and CA).11 E(VEA)-1.588 E(TS)-1.04 E F0(Array)108
96 Q/F2 10/Times-Bold@0 SF(pk)4.878 E F0 2.378(may be sorted by)4.878 F
F2(quickselect)4.878 E F0 2.378
(and therefore initially unsorted order statistic ranks may be)4.878 F
.095(permuted by a call to)108 108 R F2(quickselect)2.595 E F0 5.095(.I)
C 2.595(ti)-5.095 G 2.595(sr)-2.595 G .095(ecommended \(b)-2.595 F .095
(ut not required\) that the order statistics array)-.2 F F2(pk)2.595 E
F0(be)2.595 E(supplied in sorted order)108 120 Q(.)-.55 E 2.1(If array)
108 136.8 R F2(pk)4.6 E F0 2.1(contains duplicated ranks, those duplica\
tes will be ignored during processing and will be)4.6 F .87
(grouped together by sorting after processing.)108 148.8 R .87
(This may be e)5.87 F(xpensi)-.15 E 1.17 -.15(ve i)-.25 H 3.37(fal).15 G
(ar)-3.37 E .87(ge number of order statistics)-.18 F 2.092(are specif)
108 160.8 R 2.091(ied and there is at least one duplicate.)-.2 F 2.091
(It is recommended \(b)7.091 F 2.091(ut not required\) that the order)
-.2 F(statistics array)108 172.8 Q F2(pk)2.5 E F0
(contain no duplicates.)2.5 E F2(quickselect)108 189.6 Q F0 .361(has e)
2.861 F .361(xpected and w)-.15 F .361(orst\255case linear comple)-.1 F
.362(xity for f)-.15 F .362(inding a single order statistic.)-.2 F -.8
(Wo)5.362 G(rst\255case).8 E 1.019
(non-stable selection of multiple order statistics is linearithmic.)108
201.6 R F2(quickselect)6.018 E F0 1.018(has e)3.518 F 1.018
(xpected and w)-.15 F(orst\255case)-.1 E(linearithmic comple)108 213.6 Q
(xity for non-stable sorting.)-.15 E .059
(When stable sorting or selection is specif)108 230.4 R .059
(ied by setting)-.2 F F2 -.1(QU)2.559 G(ICKSELECT_ST).1 E(ABLE)-.9 E F0
2.559(,s)C .06(election may become)-2.559 F 1.533
(linearithmic and sorting may become)108 242.832 R/F3 10/Times-Italic@0
SF(O)3.933 E F0(\().27 E F3(N).7 E F0(log)2.8 E/F4 7/Times-Roman@0 SF(2)
-4.2 I F3(N)2.9 4.2 M F0 4.033(\)d)1.1 G 1.533(ue to additional data mo)
-4.033 F -.15(ve)-.15 G 1.533(ment \(the comple).15 F 1.533(xity of)-.15
F 2.17(comparisons is unchanged\) for random input.)108 254.832 R(Moreo)
7.171 E -.15(ve)-.15 G 2.971 -.4(r, l).15 H 2.171
(ocality of access may be poor).4 F 4.671(,r)-.4 G 2.171(esulting in)
-4.671 F 2.782(performance deterioration due to cache size ef)108
266.832 R 5.282(fects. Sorting)-.25 F 2.781
(and selection may remain in\255place, or)5.281 F 2.301
(additional size\255related temporary memory may be used if a)108
278.832 R -.25(va)-.2 G 4.801(ilable. W).25 F 2.301
(orst\255case stable selection and)-.8 F
(sorting may be polynomial with an e)108 290.832 Q(xponent of 1.5.)-.15
E 9.498(Compiled library code might ha)108 307.632 R 9.798 -.15(ve b)-.2
H 9.498(een b).15 F 9.498(uilt with)-.2 F F2 -.1(QU)11.997 G
(ICKSELECT_ST).1 E(ABLE)-.9 E F0(and/or)11.997 E F2 -.1(QU)108 319.632 S
(ICKSELECT_INDIRECT).1 E F0 .5(set to v)3 F .501
(alues other than those which appear in)-.25 F F3(quic)3.251 E
(kselect.h)-.2 E F0 5.501(.I).28 G 3.001(ft)-5.501 G .501(he library)
-3.001 F -.1(wa)108 331.632 S 5.986(sb).1 G 3.486(uilt without the opti\
on to sort or select while maintaining partial order stability)-6.186 F
5.985(,s)-.65 G(pecifying)-5.985 E F2 -.1(QU)108 343.632 S(ICKSELECT_ST)
.1 E(ABLE)-.9 E F0(in)2.595 E F3(options)2.825 E F0 .096(will not be ef)
2.865 F(fecti)-.25 E -.15(ve)-.25 G 2.596(;q).15 G .096
(uickselect will set)-2.596 F F3(errno)2.786 E F0(to)2.776 E F2(EINV)
2.596 E(AL)-1.35 E F0 .096(and the)2.596 F .469
(array will not be sorted.)108 355.632 R(Lik)5.469 E -.25(ew)-.1 G .469
(ise for).25 F F2 -.1(QU)2.968 G(ICKSELECT_INDIRECT).1 E F0 5.468(.I)C
2.968(ti)-5.468 G 2.968(ss)-2.968 G .468(trongly recommended to call)
-2.968 F F3(quic)108.25 367.632 Q(kselect_options)-.2 E F0 3.837
(to determine which option bits are a)6.607 F -.25(va)-.2 G 6.338
(ilable. Compiled).25 F 3.838(options may also be)6.338 F .227
(determined by running e)108 379.632 R .226(xternal programs such as)
-.15 F F3(what)3.066 E F0(or)3.406 E F3(ident)2.736 E F0(or)3.406 E F3
(strings)3.066 E F0 .226(on the library archi)2.996 F .526 -.15(ve c)
-.25 H(ontaining).15 E F3(quic)108.25 391.632 Q(kselect)-.2 E F0 2.5(;s)
.68 G(uitable strings indicating compile\255time b)-2.5 E
(uild options are encoded in the object f)-.2 E(iles.)-.2 E F1
(FUTURE DIRECTIONS)72 408.432 Q F0(none)108 420.432 Q F1(SEE ALSO)72
437.232 Q F0(qsort, what, ident, strcmp, strings)108 449.232 Q F1
(CHANGE HIST)72 466.032 Q(OR)-.197 E(Y)-.383 E F0 .151
(Function implementation initial v)108 478.032 R .151(ersion June 2016.)
-.15 F .151(Implementation backw)5.151 F .151
(ard\255compatible updates through)-.1 F(March 2019.)108 490.032 Q
(Manual page initial v)108 506.832 Q(ersion January 2017.)-.15 E
(Latest manual page update March 2019.)5 E F1 -.548(AU)72 523.632 S
(THOR).548 E F0(Bruce Lilly <bruce.lilly@gmail.com>)108 535.632 Q F1
(LICENSE)72 552.432 Q F0(The follo)108 564.432 Q(wing license co)-.25 E
-.15(ve)-.15 G(rs this softw).15 E(are, including mak)-.1 E(ef)-.1 E
(iles and documentation:)-.2 E(This softw)108 581.232 Q(are is co)-.1 E
-.15(ve)-.15 G(red by the zlib/libpng license.).15 E 5.724(The zlib/lib\
png license is a recognized open source license by the Open Source Init\
iati)108 593.232 R -.15(ve)-.25 G(:).15 E(http://opensource.or)108
605.232 Q(g/licenses/Zlib)-.18 E 3.683
(The zlib/libpng license is a recognized "free" softw)108 617.232 R
3.683(are license by the Free Softw)-.1 F 3.684(are F)-.1 F(oundation:)
-.15 E(https://directory)108 629.232 Q(.fsf.or)-.65 E
(g/wiki/License:Zlib)-.18 E 104.135(*************** Cop)50.4 641.232 R
(yright notice \(part of the license\))-.1 E(***************)106.635 E
(@\(#\)quickselect.3 1.14 2019-04-23T11:17:08Z cop)108 653.232 Q
(yright 2016-2018 Bruce Lilly)-.1 E .483(This softw)108 665.232 R .483
(are is pro)-.1 F .483(vided 'as-is', without an)-.15 F 2.983(ye)-.15 G
.483(xpress or implied w)-3.133 F(arranty)-.1 E 5.483(.I)-.65 G 2.983
(nn)-5.483 G 2.983(oe)-2.983 G -.15(ve)-3.233 G .483
(nt will the authors be).15 F(held liable for an)108 677.232 Q 2.5(yd)
-.15 G(amages arising from the use of this softw)-2.5 E(are.)-.1 E .968
(Permission is granted to an)108 694.032 R .968(yone to use this softw)
-.15 F .969(are for an)-.1 F 3.469(yp)-.15 G .969
(urpose, including commercial applications,)-3.469 F
(and to alter it and redistrib)108 706.032 Q(ute it freely)-.2 E 2.5(,s)
-.65 G(ubject to the follo)-2.5 E(wing restrictions:)-.25 E(4)535 768 Q
0 Cg EP
%%Page: 5 5
%%BeginPageSetup
BP
%%EndPageSetup
/F0 10/Times-Roman@0 SF 122.355(quickselect\(3\) Library)72 48 R
(Functions Manual)2.5 E(quickselect\(3\))124.855 E(1.)108 84 Q .048
(The origin of this softw)129.6 84 R .048(are must not be misrepresente\
d; you must not claim that you wrote the original)-.1 F(softw)129.6 96 Q
1.573(are. If you use this softw)-.1 F 1.574(are in a product, an ackno)
-.1 F 1.574(wledgment in the product documentation)-.25 F -.1(wo)129.6
108 S(uld be appreciated b).1 E(ut is not required.)-.2 E(2.)108 124.8 Q
.375(Altered source v)129.6 124.8 R .375(ersions must be plainly mark)
-.15 F .374(ed as such, and must not be misrepresented as being the)-.1
F(original softw)129.6 136.8 Q(are.)-.1 E(3.)108 153.6 Q
(This notice may not be remo)129.6 153.6 Q -.15(ve)-.15 G 2.5(do).15 G
2.5(ra)-2.5 G(ltered from an)-2.5 E 2.5(ys)-.15 G(ource distrib)-2.5 E
(ution.)-.2 E 97(************************* \(end)50.4 165.6 R
(of license\))2.5 E(*************************)99.5 E -1.1(Yo)108 182.4 S
2.5(um)1.1 G(ay send b)-2.5 E
(ug reports to bruce.lilly@gmail.com with subject "quickselect".)-.2 E
(5)535 768 Q 0 Cg EP
%%Trailer
end
%%EOF
